[build-system]
build-backend = "hatchling.build"
requires = [
  "hatch-vcs>=0.4",
  "hatchling>=1.25",
]

[project]
name = "tox"
description = "tox is a generic virtualenv management and test command line tool"
readme.content-type = "text/markdown"
readme.file = "README.md"
keywords = [
  "environments",
  "isolated",
  "testing",
  "virtual",
]
license = "MIT"
maintainers = [
  { name = "Anthony Sottile", email = "asottile@umich.edu" },
  { name = "Bernát Gábor", email = "gaborjbernat@gmail.com" },
  { name = "Jürgen Gmach", email = "juergen.gmach@googlemail.com" },
  { name = "Oliver Bestwalter", email = "oliver@bestwalter.de" },
]
authors = [
  { name = "Bernát Gábor", email = "gaborjbernat@gmail.com" },
]
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Framework :: tox",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Testing",
  "Topic :: Utilities",
]
dynamic = [
  "version",
]
dependencies = [
  "cachetools>=5.3.3",
  "chardet>=5.2",
  "colorama>=0.4.6",
  "filelock>=3.15.4",
  "packaging>=24.1",
  "platformdirs>=4.2.2",
  "pluggy>=1.5",
  "pyproject-api>=1.7.1",
  "tomli>=2.0.1; python_version<'3.11'",
  "virtualenv>=20.26.3",
]
optional-dependencies.docs = [
  "furo>=2024.5.6",
  "sphinx>=7.3.7",
  "sphinx-argparse-cli>=1.16",
  "sphinx-autodoc-typehints!=1.23.4,>=2.2.2",
  "sphinx-copybutton>=0.5.2",
  "sphinx-inline-tabs>=2023.4.21",
  "sphinxcontrib-towncrier>=0.2.1a0",
  "towncrier>=23.11",
]
optional-dependencies.testing = [
  "build[virtualenv]>=1.2.1",
  "covdefaults>=2.3",
  "detect-test-pollution>=1.2",
  "devpi-process>=1",
  "diff-cover>=9.1",
  "distlib>=0.3.8",
  "flaky>=3.8.1",
  "hatch-vcs>=0.4",
  "hatchling>=1.25",
  "psutil>=6",
  "pytest>=8.2.2",
  "pytest-cov>=5",
  "pytest-mock>=3.14",
  "pytest-xdist>=3.6.1",
  "re-assert>=1.1",
  "setuptools>=70.2",
  "time-machine>=2.14.2; implementation_name!='pypy'",
  "wheel>=0.43",
]
urls.Documentation = "https://tox.wiki"
urls.Homepage = "http://tox.readthedocs.org"
urls."Release Notes" = "https://tox.wiki/en/latest/changelog.html"
urls.Source = "https://github.com/tox-dev/tox"
urls.Tracker = "https://github.com/tox-dev/tox/issues"
scripts.tox = "tox.run:run"

[tool.hatch]
build.dev-mode-dirs = [
  "src",
]
build.hooks.vcs.version-file = "src/tox/version.py"
build.targets.sdist.include = [
  "/src",
  "/tests",
  "/tox.ini",
]
version.source = "vcs"

[tool.ruff]
target-version = "py38"
line-length = 120
format.preview = true
format.docstring-code-line-length = 100
format.docstring-code-format = true
lint.select = [
  "ALL",
]
lint.ignore = [
  "ANN101",  # Missing type annotation for `self` in method
  "ANN102",  # Missing type annotation for `cls` in classmethod"
  "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed in `arg`"
  "COM812",  # conflicts with formatter
  "CPY",     # No copyright header
  "D",       # ignore documentation for now
  "D203",    # `one-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible
  "D212",    # `multi-line-summary-first-line` (D212) and `multi-line-summary-second-line` (D213) are incompatible
  "INP001",  # no implicit namespaces here
  "ISC001",  # conflicts with formatter
  "PLR0914", ## Too many local variables
  "PLR0917", ## Too many positional arguments
  "S104",    # Possible binding to all interfaces
  "S404",    # Using subprocess is alright.
  "S603",    # Using subprocess is alright.
]
lint.per-file-ignores."tests/**/*.py" = [
  "D",       # don't care about documentation in tests
  "FBT",     # don"t care about booleans as positional arguments in tests
  "INP001",  # no implicit namespace
  "PLR2004", # Magic value used in comparison, consider replacing with a constant variable
  "S101",    # asserts allowed in tests...
  "S603",    # `subprocess` call: check for execution of untrusted input
]
lint.isort = { known-first-party = [
  "tox",
  "tests",
], required-imports = [
  "from __future__ import annotations",
] }
lint.preview = true

[tool.codespell]
builtin = "clear,usage,en-GB_to_en-US"
write-changes = true
skip = "*.svg"
ignore-words = "ignore-words.txt"
count = true

[tool.pyproject-fmt]
max_supported_python = "3.13"

[tool.pytest.ini_options]
testpaths = [
  "tests",
]
addopts = "--tb=auto -ra --showlocals --no-success-flaky-report"

[tool.coverage]
html.show_contexts = true
html.skip_covered = false
paths.source = [
  "src",
  ".tox*/*/lib/python*/site-packages",
  ".tox*/pypy*/site-packages",
  ".tox*\\*\\Lib\\site-packages",
  "*/src",
  "*\\src",
]
report.fail_under = 88
report.omit = [
  "src/tox/config/cli/for_docs.py",
  "tests/execute/local_subprocess/bad_process.py",
  "tests/type_check/*",
]
run.parallel = true
run.plugins = [
  "covdefaults",
]

[tool.towncrier]
name = "tox"
filename = "docs/changelog.rst"
directory = "docs/changelog"
title_format = false
issue_format = ":issue:`{issue}`"
template = "docs/changelog/template.jinja2"
# possible types, all default: feature, bugfix, doc, removal, misc

[tool.mypy]
python_version = "3.11"
show_error_codes = true
strict = true
overrides = [
  { module = [
    "colorama.*",
    "coverage.*",
    "distlib.*",
    "flaky.*",
    "importlib_metadata.*",
    "pluggy.*",
    "psutil.*",
    "re_assert.*",
    "virtualenv.*",
  ], ignore_missing_imports = true },
]
