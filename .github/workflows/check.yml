name: check
on:
  push:
  pull_request:
  schedule:
    - cron: "0 8 * * *"

jobs:
  pre_commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.0

  test:
    name: test ${{ matrix.py }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - Ubuntu
          - Windows
          - MacOs
        py:
          - "3.10.0-rc.1"
          - "3.9"
          - "3.8"
          - "3.7"
          - "3.6"
    steps:
      - name: Setup python for tox
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install self-tox
        run: python -m pip install .
      - name: Setup python2.7 as test dependency
        uses: actions/setup-python@v2
        with:
          python-version: 2.7
      - name: Setup python for test ${{ matrix.py }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.py }}
      - name: Pick environment to run
        run: |
          import json
          import os
          import subprocess
          major, minor, impl = json.loads(subprocess.check_output(["python", "-c", "import json; import sys; import platform; print(json.dumps([sys.version_info[0], sys.version_info[1], platform.python_implementation()]));"], universal_newlines=True))
          with open(os.environ['GITHUB_ENV'], 'a') as file_handler:
                file_handler.write('TOXENV=' + ("py" if impl == "CPython" else "pypy") + ("{}{}".format(major, minor) if impl == "CPython" else "3") + "\n")
        shell: python
      - name: Setup test suite
        run: tox4 r -vv --notest
      - name: Run test suite
        run: tox4 r --skip-pkg-install
        env:
          PYTEST_ADDOPTS: "-vv --durations=20"
          CI_RUN: "yes"
          DIFF_AGAINST: HEAD
      - name: Rename coverage report file
        run: |
          import os; os.rename('.tox/4/coverage.{}.xml'.format(os.environ['TOXENV']), '.tox/4/coverage.xml')
        shell: python
      - uses: codecov/codecov-action@v1
        with:
          file: ./.tox/4/coverage.xml
          flags: tests
          name: ${{ matrix.py }} - ${{ matrix.os }}

  check:
    name: check ${{ matrix.tox_env }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - Windows
          - Ubuntu
        tox_env:
          - type
          - dev
          - docs
          - pkg_meta
        exclude:
          - { os: windows, tox_env: pkg_meta }
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install self-tox
        run: python -m pip install .
      - name: Run check for ${{ matrix.tox_env }}
        run: tox4 r -e ${{ matrix.tox_env }}
        env:
          UPGRADE_ADVISORY: "yes"

  publish:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: [ check, test, pre_commit ]
    runs-on: ubuntu-latest
    steps:
      - name: Setup python to build package
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install build
        run: python -m pip install build
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Build package
        run: pyproject-build -s -w . -o dist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          skip_existing: true
          user: __token__
          password: ${{ secrets.pypi_password }}
