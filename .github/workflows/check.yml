name: check
on:
  push:
    branches: [legacy, 'test-me-*']
    tags:
  pull_request:
  schedule:
    - cron: "0 8 * * *"

concurrency:
  group: check-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: test ${{ matrix.py }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        py:
          - "3.11"
          - "pypy-3.7-v7.3.9"  # ahead to start it earlier because takes longer
          - "pypy-2.7-v7.3.9"  # ahead to start it earlier because takes longer
          - "3.10"
          - "3.9"
          - "3.8"
          - "3.7"
          - "3.6"
          - "3.5"
          - "2.7"
        os:
          - ubuntu-20.04
          - macos-12
          - windows-2022
    steps:
      - name: Setup python for tox
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install tox
        run: python -m pip install tox
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup python for test ${{ matrix.py }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py }}
      - name: Pick environment to run
        run: |
          import codecs; import os; import platform; import sys
          env = 'TOXENV=py{}{}{}'.format("" if platform.python_implementation() == "CPython" else "py", sys.version_info.major, sys.version_info.minor)
          print("Picked: {} for {} based of {}".format(env, sys.version, sys.executable))
          with codecs.open(os.environ["GITHUB_ENV"], "a", "utf-8") as file_handler:
              file_handler.write(env)
        shell: python
      - name: Setup test suite
        run: tox -vv --notest
      - name: Run test suite
        run: tox --skip-pkg-install
        env:
          PYTEST_ADDOPTS: "-vv --durations=20"
          CI_RUN: "yes"
          DIFF_AGAINST: HEAD
      - name: Rename coverage report file
        run: import os; import sys; os.rename(".tox/.coverage.{}".format(os.environ['TOXENV']), ".tox/.coverage.{}-{}.format(os.environ['TOXENV'], sys.platform)")
        shell: python
      - name: Upload coverage data
        uses: actions/upload-artifact@v3
        with:
          name: coverage-data
          path: ".tox/.coverage.*"

  coverage:
    name: Combine coverage
    runs-on: ubuntu-22.04
    needs: test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install tox
        run: python -m pip install tox
      - name: Setup coverage tool
        run: tox -e coverage --notest
      - name: Install package builder
        run: python -m pip install build
      - name: Build package
        run: pyproject-build --wheel .
      - name: Download coverage data
        uses: actions/download-artifact@v3
        with:
          name: coverage-data
          path: .tox
      - name: Combine and report coverage
        run: tox -e coverage
      - name: Upload HTML report
        uses: actions/upload-artifact@v3
        with:
          name: html-report
          path: .tox/htmlcov

  check:
    name: ${{ matrix.tox_env }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
          - windows-2022
        tox_env:
          - dev
          - docs
          - readme
        exclude:
          - { os: windows-2022, tox_env: readme }
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Python "3.11"
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install tox
        run: python -m pip install tox
      - name: Setup test suite
        run: tox -vv --notest -e ${{ matrix.tox_env }}
      - name: Run test suite
        run: tox --skip-pkg-install -e ${{ matrix.tox_env }}

  publish:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: [ check, coverage ]
    runs-on: ubuntu-22.04
    steps:
      - name: Setup python to build package
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install build
        run: python -m pip install build
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Build sdist and wheel
        run: python -m build -s -w . -o dist
      - name: Publish to PyPi
        uses: pypa/gh-action-pypi-publish@v1.5.1
        with:
          skip_existing: true
          user: __token__
          password: ${{ secrets.pypi_password }}
